---
# The `instance_private_ip` is also used in the service definition file.
- name: get the private IP for the instance
  set_fact:
    node_rpc_ip: "{{ instance_facts.instances[0].network_interfaces[0].private_ip_address }}"
  when: provider == "aws"

# The `node_rpc_ip` is also used in the service definition file.
- name: use the public IP as the RPC address on DO
  set_fact:
    node_rpc_ip: "{{ ansible_host }}"
  when: provider == "digital-ocean"

- name: get the latest version or a custom build of the node
  ansible.builtin.get_url:
    url: "{{ node_archive_url }}"
    dest: /tmp/{{ node_archive_filename }}

- name: extract the node binary to /usr/local/bin
  become: True
  ansible.builtin.unarchive:
    src: "/tmp/{{ node_archive_filename }}"
    dest: "{{ node_archive_dest_path }}"
    remote_src: True

- name: copy service file
  become: True
  template:
    src: sn_node.service.j2
    dest: /etc/systemd/system/safenode@.service
  register: service_template_created

- name: reload the system manager configuration
  become: True
  command: systemctl daemon-reload
  when: service_template_created.changed

- name: start the node services
  become: True
  systemd:
    name: safenode@{{ item }}
    state: started
  loop: "{{ range(1, (node_instance_count | int) + 1)|list }}"
  when: not is_genesis

- name: start the genesis node service
  become: True
  systemd:
    name: safenode@1
    state: started
    enabled: yes
  when: is_genesis
